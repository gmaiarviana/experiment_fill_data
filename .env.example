# ========================================
# POSTGRESQL DATABASE CONFIGURATION
# ========================================
POSTGRES_USER=agent_user
POSTGRES_PASSWORD=secure_password_here
DATABASE_URL=postgresql://agent_user:secure_password_here@postgres:5432/data_agent

# ========================================
# POSTGREST CONFIGURATION
# ========================================
PGRST_DB_URI=postgresql://agent_user:secure_password_here@postgres:5432/data_agent
PGRST_DB_SCHEMA=public
PGRST_DB_ANON_ROLE=agent_user
PGRST_JWT_SECRET=your-super-secret-jwt-key-minimum-32-chars-long-here

# ========================================
# APPLICATION CONFIGURATION
# ========================================
LOG_LEVEL=INFO
LOG_FORMAT=json
DEBUG=false
HOST=0.0.0.0
PORT=8000

# ========================================
# OPENAI CONFIGURATION
# ======================================== 
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini
OPENAI_MAX_TOKENS=500

# ========================================
# FRONTEND CONFIGURATION (Etapa 4)
# ========================================
VITE_API_URL=http://localhost:8000
NODE_ENV=development

# ========================================
# CHAT CONFIGURATION
# ========================================
CHAT_CONTEXT_WINDOW=4000
CHAT_MAX_MESSAGES=20
CHAT_ENABLE_FUNCTION_CALLING=true

# Instructions:
# 1. Copy this file to .env: cp .env.example .env
# 2. Update POSTGRES_PASSWORD with a secure password
# 3. Update PGRST_JWT_SECRET with a random secret key
# 4. Add your real OPENAI_API_KEY from https://platform.openai.com/api-keys
# 5. Update VITE_API_URL if using different backend URL
# 6. Keep other values as default for development